media_player:
  - platform: universal
    name: Living Room Dashboard
    unique_id: livingroom_dashboard1
    device_class: tv
    commands:
      turn_on:
        service: switch.turn_on
        target:
          entity_id: switch.livingroom_dashboard1_power
      turn_off:
        service: switch.turn_off
        target:
          entity_id: switch.livingroom_dashboard1_power
      select_source:
        service: select.select_option
        target:
          entity_id: select.livingroom_dashboard1_page
        data:
          option: "{{ source }}"
    attributes:
      state: binary_sensor.dashboard1_ping
      source: select.livingroom_dashboard1_page
      source_list: select.livingroom_dashboard1_page|options

homekit:
  - name: Living Room Dashboard
    mode: accessory
    port: 21067
    filter:
      include_entities:
        - media_player.livingroom_dashboard1

template:
  - trigger:
      platform: time_pattern
      minutes: "/1"
  - binary_sensor:
      - name: Dashboard Motion Detected
        unique_id: livingroom_dashboard1_motion
        device_class: "occupancy"
        delay_off: 1min
        state: >-
          {%- if states('binary_sensor.livingroom_motionsensor_occupancy') == 'on' and states('sensor.cameron_status') == 'Home' %}
            on
          {%- else -%}
            off
          {%- endif -%}
    sensor:
      - name: Dashboard Data
        unique_id: livingroom_dashboard1_data
        state: "OK"
        attributes:
          weather_condition_now: >
            {% set cond_now = states('weather.brisbane_hourly') %}
            {% if states('sun.sun') == 'below_horizon' %}
                {% if cond_now == 'sunny' %} night {% elif cond_now == 'partlycloudy' %} night-partly-cloudy {% else %} {{ cond_now }} {% endif %}
            {% else %}
                {{ cond_now }}
            {% endif %}
          weather_temperature_now: >
            {{ state_attr('weather.brisbane_hourly', 'forecast')[0].temperature | round }}
          bin_day: >
            {{ states('sensor.brisbane_bin_day') }}

# A simple way to check whether the battery needs charging. See: automation block below.
binary_sensor:
  - platform: ping
    name: dashboard1_ping
    host: !secret dashboard1_ping
    scan_interval: 3600

automation:
  - id: "1693137322240"
    alias: "Notify: Send Telegram message when dashboard goes offline"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.dashboard1_ping
        to: "off"
        from: "on"
    condition: []
    action:
      - service: telegram_bot.send_message
        data:
          message:
            The dashboard battery, in its unsurprising predictability, has finally
            embraced its own demise. Just another cosmic hiccup in this never-ending series
            of disappointments.
          title: "*Dashboard battery requires charging*"
    mode: single
